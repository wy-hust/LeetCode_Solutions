class Solution {
vector<int>directions{-1,0,1,0,-1};
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int max_area = 0;
        if(grid.empty()||grid[0].empty()) return 0;
        for(int i = 0;i<grid.size();i++)
        {
            for(int j = 0;j<grid[i].size();j++)
            {
                if(grid[i][j]==1)
                {
                    max_area = max(max_area,dfs(grid,i,j));
                }
            }
        }
        return max_area;
    }
    int dfs(vector<vector<int>>&grid,int i, int j)
    {
        if(grid[i][j]==0) return 0;
        int area = 1;
        int x,y;
        grid[i][j]=0;
        for(int k=0;k<4;k++)
        {
            x = i+directions[k];
            y = j+directions[k+1];
            if((x>=0&&x<grid.size())&&(y>=0&&y<grid[0].size()))
            {
                area += dfs(grid,x,y);
            }

        }
        return area;
    }
};
